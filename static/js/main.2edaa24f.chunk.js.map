{"version":3,"sources":["components/Buttons/Buttons.js","components/Goods/Goods.js","App.js","index.js"],"names":["Buttons","props","letsReverse","letsSortAlphabetically","letsReset","letsSortByLength","dataOfgoodsLength","letsSelectByLength","selectedValue","react_default","a","createElement","className","onClick","type","onChange","value","map","goodLength","key","Goods","_ref","currentData","good","goodsFromServer","goodsLength","Set","forEach","add","length","App","state","isStarted","concat","initialData","Array","from","sort","letsStart","_this","setState","prevState","reverse","Object","toConsumableArray","b","target","filter","_this$state","this","Fragment","components_Buttons_Buttons","components_Goods_Goods","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.2edaa24f.chunk.js","sourcesContent":["import React from 'react';\nimport './Buttons.css';\nimport PropTypes from 'prop-types';\n\nconst Buttons = (props) => {\n  const {\n    letsReverse,\n    letsSortAlphabetically,\n    letsReset,\n    letsSortByLength,\n    dataOfgoodsLength,\n    letsSelectByLength,\n    selectedValue,\n  } = props;\n\n  return (\n    <ul className=\"buttons-list\">\n      <li className=\"buttons-list__item\">\n        <button onClick={letsReverse} type=\"button\">Reverse</button>\n      </li>\n      <li className=\"buttons-list__item\">\n        <button\n          onClick={letsSortAlphabetically}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n      </li>\n      <li className=\"buttons-list__item\">\n        <button onClick={letsReset} type=\"button\">Reset</button>\n      </li>\n      <li className=\"buttons-list__item\">\n        <button\n          onClick={letsSortByLength}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n      </li>\n      <li className=\"buttons-list__item\">\n        <label>\n          Filter goods by length:\n          <select onChange={letsSelectByLength} value={selectedValue}>\n            <option value=\"0\">No filtering</option>\n            {dataOfgoodsLength.map(goodLength => (\n              <option key={goodLength} value={goodLength}>{goodLength}</option>\n            ))}\n          </select>\n        </label>\n      </li>\n    </ul>\n  );\n};\n\nButtons.propTypes = {\n  letsReverse: PropTypes.func.isRequired,\n  letsSortAlphabetically: PropTypes.func.isRequired,\n  letsReset: PropTypes.func.isRequired,\n  letsSortByLength: PropTypes.func.isRequired,\n  dataOfgoodsLength: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  letsSelectByLength: PropTypes.func.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport './Goods.css';\nimport PropTypes from 'prop-types';\n\nconst Goods = ({ currentData }) => (\n  <ul className=\"goods-list\">\n    {currentData.map(good => (\n      <li key={good} className=\"goods-list__item\">{good}</li>\n    ))}\n  </ul>\n);\n\nGoods.propTypes = {\n  currentData: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nexport default Goods;\n","import React from 'react';\nimport './App.css';\nimport Buttons from './components/Buttons/Buttons';\nimport Goods from './components/Goods/Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst goodsLength = new Set();\n\ngoodsFromServer.forEach(good => (\n  goodsLength.add(good.length)\n));\n\nclass App extends React.Component {\n    state = {\n      isStarted: false,\n      selectedValue: '0',\n      currentData: [...goodsFromServer],\n      initialData: [...goodsFromServer],\n    };\n\n  dataOfgoodsLength = (Array.from(goodsLength)).sort()\n\n  letsStart = () => {\n    this.setState({\n      isStarted: true,\n    });\n  }\n\n  letsReverse = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.reverse(),\n    }));\n  }\n\n  letsSortAlphabetically = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.sort(),\n    }));\n  }\n\n  letsReset = () => {\n    this.setState(prevState => ({\n      currentData: [...prevState.initialData],\n      selectedValue: '0',\n    }));\n  }\n\n  letsSortByLength = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.sort((a, b) => (\n        a.length - b.length\n      )),\n    }));\n  }\n\n  letsSelectByLength = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      currentData: [...prevState.initialData].filter(good => (\n        good.length >= value\n      )),\n      selectedValue: value,\n    }));\n  }\n\n  render() {\n    const { isStarted, currentData, selectedValue } = this.state;\n    const {\n      letsStart,\n      letsReverse,\n      letsSortAlphabetically,\n      letsReset,\n      letsSortByLength,\n      dataOfgoodsLength,\n      letsSelectByLength,\n    } = this;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          Total goods:\n          {` ${currentData.length}`}\n        </h1>\n        {isStarted || (\n          <button onClick={letsStart} type=\"button\">Start</button>\n        )}\n        {isStarted && (\n          <>\n            <Buttons\n              letsReverse={letsReverse}\n              letsSortAlphabetically={letsSortAlphabetically}\n              letsReset={letsReset}\n              letsSortByLength={letsSortByLength}\n              dataOfgoodsLength={dataOfgoodsLength}\n              letsSelectByLength={letsSelectByLength}\n              selectedValue={selectedValue}\n            />\n            <Goods currentData={currentData} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}