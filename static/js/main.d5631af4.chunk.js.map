{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","goodsLength","Set","forEach","good","add","length","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dataOfgoodsLength","Array","from","sort","letsStart","setState","isStarted","letsReverse","prevState","currentData","reverse","letsSortAlphabetically","letsReset","toConsumableArray","initialData","selectedValue","letsSortByLength","a","b","letsSelectByLength","_ref","value","target","filter","state","concat","_this$state","react_default","createElement","className","onClick","type","Fragment","onChange","map","goodLength","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.d5631af4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst goodsLength = new Set();\n\ngoodsFromServer.forEach(good => (\n  goodsLength.add(good.length)\n));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isStarted: false,\n      selectedValue: 0,\n      currentData: [...goodsFromServer],\n      initialData: [...goodsFromServer],\n    };\n  }\n\n  dataOfgoodsLength = (Array.from(goodsLength)).sort()\n\n  letsStart = () => {\n    this.setState({\n      isStarted: true,\n    });\n  }\n\n  letsReverse = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.reverse(),\n    }));\n  }\n\n  letsSortAlphabetically = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.sort(),\n    }));\n  }\n\n  letsReset = () => {\n    this.setState(prevState => ({\n      currentData: [...prevState.initialData],\n      selectedValue: 0,\n    }));\n  }\n\n  letsSortByLength = () => {\n    this.setState(prevState => ({\n      currentData: prevState.currentData.sort((a, b) => (\n        a.length - b.length\n      )),\n    }));\n  }\n\n  letsSelectByLength = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      currentData: [...prevState.initialData].filter(good => (\n        good.length >= value\n      )),\n      selectedValue: value,\n    }));\n  }\n\n  render() {\n    const { isStarted, currentData, selectedValue } = this.state;\n    const {\n      letsStart,\n      letsReverse,\n      letsSortAlphabetically,\n      letsReset,\n      letsSortByLength,\n      dataOfgoodsLength,\n      letsSelectByLength,\n    } = this;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          Total goods:\n          {` ${currentData.length}`}\n        </h1>\n        {isStarted || (\n          <button onClick={letsStart} type=\"button\">Start</button>\n        )}\n        {isStarted && (\n          <>\n            <ul className=\"buttons-list\">\n              <li className=\"buttons-list__item\">\n                <button onClick={letsReverse} type=\"button\">Reverse</button>\n              </li>\n              <li className=\"buttons-list__item\">\n                <button\n                  onClick={letsSortAlphabetically}\n                  type=\"button\"\n                >\n                  Sort alphabetically\n                </button>\n              </li>\n              <li className=\"buttons-list__item\">\n                <button onClick={letsReset} type=\"button\">Reset</button>\n              </li>\n              <li className=\"buttons-list__item\">\n                <button\n                  onClick={letsSortByLength}\n                  type=\"button\"\n                >\n                  Sort by length\n                </button>\n              </li>\n              <li className=\"buttons-list__item\">\n                <label>\n                  Filter goods by length:\n                  <select onChange={letsSelectByLength} value={selectedValue}>\n                    <option value=\"0\">No filtering</option>\n                    {dataOfgoodsLength.map(goodLength => (\n                      <option value={goodLength}>{goodLength}</option>\n                    ))}\n                  </select>\n                </label>\n              </li>\n            </ul>\n            <ul className=\"goods-list\">\n              {currentData.map(good => (\n                <li className=\"goods-list__item\">{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}